<?xml version="1.0" encoding="utf-8"?>
<sdf version="1.6">
  <model name="alphabot2">
    <pose>0 0 0 0 0 0</pose><!--Centro do cilindro ao chao-->
    <plugin name="clock" filename="libgz_clock.so">
      <topic>/gazebo/frc/time</topic>
    </plugin>
    <link name="chassis">
      <gravity>1</gravity>
      <self_collide>0</self_collide>
      <pose>0 0 0.016 0 0 0</pose>
      <must_be_base_link>1</must_be_base_link>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
      <inertial>
        <mass>0.2</mass>
        <pose>0 0 0.0000181121 0 0 0</pose><!--0.0000181121 acima do centro do cilindro-->
        <inertia>
	  <ixx>0.000031066</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000032349</iyy>
          <iyz>0</iyz>
          <izz>0.00036</izz>
        </inertia>
      </inertial>
      <collision name="chassis_collision">
        <pose>0 0 0.016 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://meshes/chassis.STL</uri>
          </mesh>
        </geometry>
	<surface>
          <contact>
            <ode>
              <kp>50000</kp>
              <kd>9000</kd>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>0</mu>
              <mu2>0</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="chassis_visual">
        <pose>0 0 0.016 0 0 0</pose>
        <material>
          <ambient>0.5 0.5 0.5 0.5</ambient>
          <diffuse>0 0 1 1</diffuse>
        </material>
        <geometry><!--Mudar para a visualização certa!-->
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://meshes/chassis.STL</uri>
          </mesh>
        </geometry>
      </visual>
      <visual name="camera_visual">
        <pose>0 0 0.057 0 0 0</pose>
        <material>
          <ambient>0.5 0.5 0.5 0.5</ambient>
          <diffuse>0.8 0.8 0.8 1</diffuse>
        </material>
        <geometry><!--Mudar para a visualização certa!-->
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://meshes/camera.stl</uri>
          </mesh>
        </geometry>
      </visual>
      <collision name="camera_collision">
        <pose>0 0 0.057 0 0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://meshes/camera.stl</uri>
          </mesh>
        </geometry>
      </collision>
	<sensor name="camera_controller_top" type="camera">
	  <visualize>0</visualize>
	  <always_on>1</always_on>
	  <pose>0 0 0.132 0 -0.28 0</pose>
	  <camera name="chassiscameratop">
		<horizontal_fov>1.08504</horizontal_fov>
		<image>
		  <width>2552</width>
        	  <height>1944</height>
		</image>
		<clip>
		  <near>0.01</near>
		  <far>1000</far>
		</clip>
	  </camera>
	  <plugin name="camera_controller_tracking_top" filename="libgazebo_ros_camera.so">
		<alwaysOn>true</alwaysOn>
		<updateRate>30.0</updateRate>
		<cameraName>conde_camera_signalling_panel/</cameraName>
		<imageTopicName>image_raw</imageTopicName>
		<cameraInfoTopicName>camera_info_top</cameraInfoTopicName>
		<!--<frameName>camera_link_tracking</frameName>-->
	  	<!--
		<k1>-0.275678598507515</k1>
		<k2>0.045106260288961</k2>
		<k3>0.0</k3>
		<p1>0.004883645512607</p1>
		<p2>0.001092737340199</p2>-->
	   </plugin>
	</sensor>
	    
       <sensor type="gpu_ray" name="sensor1_bottom">
      	<pose>0.038 -0.028 -0.021 0 1.570796 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor1_bottom_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor1_bottom</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
    <sensor type="gpu_ray" name="sensor2_bottom">
      	<pose>0.038 -0.014 -0.021 0 1.570796 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor2_bottom_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor2_bottom</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
    <sensor type="gpu_ray" name="sensor3_bottom">
      	<pose>0.038 0 -0.0205 0 1.570796 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor3_bottom_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor3_bottom</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
    <sensor type="gpu_ray" name="sensor4_bottom">
      	<pose>0.038 0.014 -0.021 0 1.570796 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor4_bottom_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor4_bottom</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
    <sensor type="gpu_ray" name="sensor5_bottom">
      	<pose>0.038 0.028 -0.021 0 1.570796 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor5_bottom_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor5_bottom</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
	    
    <sensor type="gpu_ray" name="sensor1_top">
      	<pose>0 0 0 0 0 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor1_top_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor1_top</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>
    <sensor type="gpu_ray" name="sensor2_top">
      	<pose>0 0 0 0 0 0</pose>
      	<visualize>false</visualize>
      	<update_rate>30.0</update_rate>
     	 <ray>
        <scan>
          <horizontal>
            <samples>200</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="sensor2_top_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>sensor2_top</topicName>
        <!--<frameName>hokuyo_link</frameName>-->
      </plugin>
    </sensor>

          <collision name='caster_collision_front'>
            <pose>0.05 0 0.011 0 0 0</pose><!--confirmar-->
            <geometry>
                <sphere>
                <radius>0.005</radius>
              </sphere>
            </geometry>

            <surface>
              <friction>
                <ode>
                  <mu>0</mu>
                  <mu2>0</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
          </collision>

          <visual name='caster_visual_front'>
            <pose>0.05 0 0.011 0 0 0</pose>
            <geometry>
              <sphere>
                <radius>0.005</radius>
              </sphere>
            </geometry>
          </visual>

	<collision name='caster_collision_back'>
            <pose>-0.05 0 0.011 0 0 0</pose><!--confirmar-->
            <geometry>
                <sphere>
                <radius>0.005</radius>
              </sphere>
            </geometry>

            <surface>
              <friction>
                <ode>
                  <mu>0</mu>
                  <mu2>0</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
          </collision>

          <visual name='caster_visual_back'>
            <pose>-0.05 0 0.011 0 0 0</pose>
            <geometry>
              <sphere>
                <radius>0.005</radius>
              </sphere>
            </geometry>
          </visual>

    </link>
    <link name="left_wheel">
      <gravity>1</gravity>
      <self_collide>0</self_collide>
      <pose>0 0 0 0 0 0</pose>
      <must_be_base_link>0</must_be_base_link>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
      <inertial>
        <mass>0.045</mass>
        <pose>0 0 0 0 0 0</pose><!--ponto de inercia no meio da roda-->
        <inertia>
          <ixx>0.00000000136634</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.000000000136634</iyy>
          <iyz>0</iyz>
          <izz>0.00000945563</izz>
        </inertia>
      </inertial>
      <collision name="left_wheel_collision">
        <pose>0 -0.0539 0.0365 0 1.57079633 1.57079633</pose>
        <geometry>
          <cylinder>
	    <length>0.017</length>
	    <radius>0.0205</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <kp>10000</kp>
              <kd>1000</kd>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>20000</mu>
              <mu2>5000</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="left_wheel_visual">
        <pose>0 -0.0539 0.0365 0 1.57079633 1.57079633</pose>
        <material>
          <ambient>0.5 0.5 0.5 0.5</ambient>
          <diffuse>0.3 0.3 0.3 1</diffuse>
        </material>
        <geometry>
          <cylinder>
	    <length>0.017</length>
	    <radius>0.0205</radius>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <joint name="chassis-left_wheel" type="revolute">
      <parent>chassis</parent>
      <child>left_wheel</child>
      <pose>0 -0.0539 0.0365 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <dynamics>
          <damping>0</damping>
          <friction>0</friction>
        </dynamics>
        <limit>
          <effort>10</effort>
        </limit>
      </axis>
    </joint>

    <link name="right_wheel">
      <gravity>1</gravity>
      <self_collide>0</self_collide>
      <pose>0 0 0 0 0 0 </pose>
      <must_be_base_link>0</must_be_base_link>
      <velocity_decay>
        <linear>0</linear>
        <angular>0</angular>
      </velocity_decay>
      <inertial>
        <mass>0.045</mass>
        <pose>0 0 0 0 0 0</pose>
        <inertia>
          <ixx>0.00001638</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.00002654</iyy>
          <iyz>0</iyz>
          <izz>0.00001638</izz>
        </inertia>
      </inertial>
      <collision name="right_wheel_collision">
        <pose>0 0.0539 0.0365 0 1.57079633 1.57079633</pose>
        <geometry>
          <cylinder>
	    <length>0.017</length>
	    <radius>0.021</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode>
              <kp>10000</kp>
              <kd>1000</kd>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>20000</mu>
              <mu2>5000</mu2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name="right_wheel_visual">
        <pose>0 0.0539 0.0365 0 1.57079633 1.57079633</pose>
        <material>
          <ambient>0.5 0.5 0.5 0.5</ambient>
          <diffuse>0.3 0.3 0.3 1</diffuse>
        </material>
        <geometry>
          <cylinder>
	    <length>0.017</length>
	    <radius>0.021</radius>
          </cylinder>
        </geometry>
      </visual>
    </link>

    <joint name="chassis-right_wheel" type="revolute">
      <parent>chassis</parent>
      <child>right_wheel</child>
      <pose>0 0.0539 0.0365 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <dynamics>
          <damping>0</damping>
          <friction>0</friction>
        </dynamics>
        <limit>
          <effort>10</effort>
        </limit>
      </axis>
    </joint>

	<plugin name='differential_drive_controller' filename='libgazebo_ros_diff_drive.so'>
		<publishWheelTF>true</publishWheelTF>
		<publishWheelJointState>false</publishWheelJointState>
		<alwaysOn>true</alwaysOn>
		<updateRate>50</updateRate>
		<rightJoint>chassis-right_wheel</rightJoint>
		<leftJoint>chassis-left_wheel</leftJoint>
		<wheelSeparation>0.3708</wheelSeparation>
		<wheelDiameter>0.051522</wheelDiameter>
		<wheelTorque>7.5</wheelTorque>
		<commandTopic>cmd_vel</commandTopic>
		<odometryTopic>odom</odometryTopic>
		<odometryFrame>odom</odometryFrame>
		<robotBaseFrame>base_footprint</robotBaseFrame>
		<robotNamespace>/</robotNamespace>
		<legacyMode>false</legacyMode>
  	<rosDebugLevel>na</rosDebugLevel>
		<wheelAcceleration>0</wheelAcceleration>
		<publishTf>0</publishTf>
	</plugin>
  </model>
</sdf>
